name: CI

on:
  push:
    # branches: [ $default-branch ]
  # pull_request:
    # branches: [ $default-branch ]

env: 
  VCPKG_ROOT: "./vcpkg"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  # Build and test the code.
  build-test:
    name: Test ${{ matrix.os }} + ${{ matrix.cpp_compiler }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        cpp_compiler: [g++, clang++, cl]
        exclude:
          - os: windows-latest
            cpp_compiler: g++
          - os: windows-latest
            cpp_compiler: clang++
          - os: ubuntu-latest
            cpp_compiler: cl

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup cache
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install vcpkg
      env:
        BOOTSTRAP_FILE_EXT: ${{ contains(runner.os, 'windows') && 'bat' || 'sh' }}
      run: |
        git clone http://github.com/Microsoft/vcpkg
        ./vcpkg/bootstrap-vcpkg.$BOOTSTRAP_FILE_EXT -disableMetrics

    - name: Configure
      run: >
        cmake -S .
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        --preset "build-tests"

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      run: ctest --test-dir build --build-config ${{ matrix.build_type }}

  # Make sure the documentation is not broken.
  build-docs:
    name: ${{ matrix.os }}-${{ matrix.cpp_compiler }}-docs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Doxygen
      run: sudo apt-get install -y doxygen
    
    - name: Build docs
      run: cmake -S . --preset "build-docs-only"
